* 当拥有某值的不可变引用时，就不能再获取一个可变引用。
* 在任意给定时间，*要么* 只能有一个可变引用， *要么* 只能有多个不可变引用
* 引用必须总是有效
* *借用* 如果一个人拥有某样东西，你可以从他那里借来。当你使用完毕，必须还回去。我们并不拥有它。
* 可变引用

#+BEGIN_SRC rust
fn main() {
    let mut s = String::from("hello");

    change(&mut s);
}

fn change(some_string: &mut String) {
    some_string.push_str(", world");
}
#+END_SRC
** *很大的限制* ：在同一时间只能有一个对某一特定数据的可变引用。这些尝试创建两个 s 的可变引用的代码会失败：