* 移动
** #+BEGIN_SRC rust
let x = 5;
    let y = x;
#+END_SRC
*** y 拷贝x的值5, 两个5被放入栈中
** #+BEGIN_SRC rust
    let s1 = String::from("hello");
    let s2 = s1;

    println!("{}, world!", s1);
#+END_SRC
*** 报错：因为s2指针指向了s1对应的堆栈，同时使s1失效，即： ~s1~ 被 *移动* 到了 ~s2~
* 只在栈上的数据：拷贝, 固定长度的数据
** #+BEGIN_SRC rust
    let x = 5;
    let y = x;

    println!("x = {}, y = {}", x, y);
#+END_SRC
* 可变数据，存储在堆上，需要使用 ~.clone()~ 进行数据克隆