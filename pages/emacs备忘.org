* calc
| Description | Emacs | CalcBase 10|
|Binary	|2#11110101|	245|
|Octal |	8#27	| 23 |
|Hexadecimal |	16#FFFF |	65535|
** (calc-word-size) 来改变字长
** 输入两次#的方式直接输入二进制补码,比如在字长为8的情况下输入 2##11110101 则其值为-11而不是245.
calc-radix 改变基数
** (calc-leading-zeros) 来在开启leading zero功能,该功能会在较短的数字前面补上0
** (calc-clip) 来现符号/无符号整型的切换.
** 计算1的个数
先输入 424242 让它入栈,然后按下 b u 将该数字拆到集合中,然后按下 v # 算出1的个数,结果是10.
* elisp
:PROPERTIES:
:collapsed: true
:END:
** 生成 A-Z 对应索引
#+BEGIN_SRC elisp
(progn
  (insert "\n")
  (setq a 0)
  (setq c ?A)
  (while (< a 26)
    (insert  (format "%d - %c\n" a c))
    (setq a     (+ a 1))
    (setq c      (+  c 1))
    ))
#+END_SRC
**
* plantUML
:PROPERTIES:
:collapsed: true
:END:
** 关系	画法
继承	<|- -
实现	<|. .
依赖	<. .
关联	<- -
聚合	o- -
组合	*- -
* 好用的包
:PROPERTIES:
:collapsed: true
:END:
** https://github.com/Wilfred/ht.el  哈希table
** https://github.com/magnars/s.el  string操作
** https://github.com/magnars/dash.el  list操作
** https://github.com/rejeep/f.el 文件目录操作
** https://github.com/ryancrum/json.el json操作
** https://github.com/emacs-mirror/emacs/tree/master/lisp/url  url操作
** https://github.com/volrath/treepy.el 递归和/或迭代地遍历树状数据结构的泛型函数
** https://github.com/NicolasPetton/seq.el  sequence
* 快捷键
:PROPERTIES:
:collapsed: true
:END:
Option(M)+;  注释
** ^^代码引用^^
~C-c '~ 进入编辑模式
Call =org-store-link= 增加标签
~C-c '~ 退出 在文本段落 ~C-c C-l~ 插入引用
** ^^脚注^^
*** ~C-c C-x f~ 创建脚注
*** 加前缀参数 ~C-u 1-~ 对脚注进行操作
*** ~C-c C-c~ ring jump
** 仅由破折号(至少包含5个破折号)组成的线将导出为水平线。
** ‘*bold*’, ‘/italic/’, ‘_underlined_’, ‘=verbatim=’ and ‘~code~’, and, if you must, ‘+strike-through+’.
* org-env-of-code-block
** ~:var NAME=FILE:REFERENCE~
** ~ #+NAME:XXX~
** ~:colnames no | yes | nil~
** ~:rownames yes~
** ~example-table[0,-1]~ 逗号分割各个维度 负数表示从最后往前 
#+BEGIN_TIP
索引为各个表格参数 ~hlines~ ~colnames~ ~rownames~ 处理之前的
#+END_TIP
** ~data=example-table[1:3]~ 冒号分割表示维度的范围，eg: 第二行开始的三行
** ~data=example-table[,0]~ 整个维度索引留空 或者 ~*~ ~0:-1~ , eg: 所有第一列
** 索引对表格和代码都有效
** elisp 代码也可以作为参数 ‘(’, ‘[’, ‘'’ or ‘`’ 为emacs code
**
**